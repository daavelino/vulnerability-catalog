import json
import random
import string
import sys


def randomString(size):
    alphabet = string.ascii_letters + string.digits + ' '
    size = int(size)
    return ''.join([random.choice(alphabet) for n in range(size)])

def randomDate():
    year = str(random.randint(2018, 2020))
    month = str(random.randint(1, 12)).rjust(2, "0")
    day = str(random.randint(1, 28)).rjust(2, "0")

    return year + "-" + month + "-" + day

def randomPicker(target):
    ''' 
    Returns a random element from a given 'target' list.
    '''
    return target[random.randint(0, len(target)-1)]

risk = ['High', 'Medium', 'Low', 'Not identified', '']
perimeter = ['External', 'Internal']
status = ['Mitigated', 'Not identified', 'Notified', 'Risk accepted', 'Solved']
owner = ['Beatrix Kiddo', 'Bill', 'Budd', 'Elle Driver', 'Hattori Hanzo', 'Sofie Fatale', 'O-Ren Ishii', 'Vernitta Green']
       
def generateEntries():
    vulnerability = {
        "model": "catalog.vulnerability",
        "fields": {
             "system": randomString(16),
             "owner": randomPicker(owner),
             "owner_email": randomString(8) + '@' + randomString(3) + '.com',
             "environment": randomString(8),
             "perimeter": randomPicker(perimeter),
             "technology": randomString(8),
             "system_type": randomString(8),
             "vulnerability": randomString(16),
             "category": randomString(16),
             "synopsis": randomString(64),
             "cvss_value": random.randint(0,10),
             "identification_date": randomDate(),
             "reporter": "Catalog Random Data Generator.",
             "risk": randomPicker(risk),
             "observation": randomString(64),
             "remediation": "",
             "remediation_deadline": randomDate(),
             "status": randomPicker(status),
             "report_file": "N/A",
             "report_page": 0
             }       
        }
    
    return(vulnerability)

if __name__=='__main__':

    if len(sys.argv) != 2:
        sys.stdout.write('Usage: ' + sys.argv[0] + ' <number of entries>')
        sys.exit(1)
    else:
        number = int(sys.argv[1])
        output_file = "random-data-" + str(number) + '-entries.json'
        sys.stdout.write('Generating ' + str(number) + ' test entries.\n')
        result = list()

        for i in range(0, number):
            result.append(generateEntries())

        result = json.dumps(result)

        f = open(output_file, 'w')
        f.write(result)
        f.close()

    sys.stdout.write('Done. Check ' + output_file + ' file.\n')
    sys.exit(0)
