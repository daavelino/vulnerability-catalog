import json
import random
import string
import sys


def randomString(size):
    alphabet = string.ascii_letters + string.digits + ' '
    size = int(size)
    return ''.join([random.choice(alphabet) for n in range(size)])

def randomDate():
    year = str(random.randint(2018, 2020))
    month = str(random.randint(1, 12)).rjust(2, "0")
    day = str(random.randint(1, 28)).rjust(2, "0")

    return year + "-" + month + "-" + day

def randomPicker(target):
    ''' 
    Returns a random element from a given 'target' list.
    '''
    return target[random.randint(0, len(target)-1)]

risk = [
    'High',\
    'Medium',\
    'Low',\
    'Not identified'
    ]
perimeter = [
    'External',\
    'Internal'
    ]
status = [
    'Mitigated',\
    'Not identified',\
    'Notified',\
    'Risk accepted',\
    'Solved']
owner = [
    'Beatrix Kiddo',\
    'Bill',\
    'Budd',\
    'Elle Driver',\
    'Hattori Hanzo',\
    'Sofie Fatale',\
    'O-Ren Ishii',\
    'Vernitta Green'
    ]
system = [
    'system 01',
    'system 02',
    'system 03',
    'system 04',
    'system 05',
    'system 06',
    'system 07',
    'system 08',
    'system 09',
    'system 10',
    'system 11',
    'system 12',
    'system 13',
    'system 14',
    'system 15',
    'system 16',
    'system 17',
    'system 18',
    'system 19',
    'system 20',
]
category = [
    'cat 01','cat 02','cat 03','cat 04','cat 05','cat 06','cat 07','cat 08','cat 09','cat 10', \
    'cat 11','cat 12','cat 13','cat 14','cat 15','cat 16','cat 17','cat 18','cat 19','cat 20', \
    'cat 21','cat 22','cat 23','cat 24','cat 25','cat 26','cat 27','cat 28','cat 29','cat 30', \
    'cat 31','cat 32','cat 33','cat 34','cat 35','cat 36','cat 37','cat 38','cat 39','cat 40', \
    'cat 41','cat 42','cat 43','cat 44','cat 45','cat 46','cat 47','cat 48','cat 49','cat 50'
    ]
       
def generateEntries():
    vulnerability = {
        "model": "catalog.vulnerability",
        "fields": {
             "system": randomPicker(system),
             "owner": randomPicker(owner),
             "owner_email": randomString(8) + '@' + randomString(3) + '.com',
             "environment": randomString(8),
             "perimeter": randomPicker(perimeter),
             "technology": randomString(8),
             "system_type": randomString(8),
             "vulnerability": randomString(16),
             "category": randomPicker(category),
             "synopsis": randomString(64),
             "cvss_value": random.randint(0,10),
             "identification_date": randomDate(),
             "reporter": "Catalog Random Data Generator.",
             "risk": randomPicker(risk),
             "observation": randomString(64),
             "remediation": "",
             "remediation_deadline": randomDate(),
             "status": randomPicker(status),
             "report_file": "N/A",
             "report_page": 0
             }       
        }
    
    return(vulnerability)

if __name__=='__main__':

    if len(sys.argv) != 2:
        sys.stdout.write('Usage: ' + sys.argv[0] + ' <number of entries>')
        sys.exit(1)
    else:
        number = int(sys.argv[1])
        output_file = "random-data-" + str(number) + '-entries.json'
        sys.stdout.write('Generating ' + str(number) + ' test entries.\n')
        result = list()

        for i in range(0, number):
            result.append(generateEntries())

        result = json.dumps(result)

        f = open(output_file, 'w')
        f.write(result)
        f.close()

    sys.stdout.write('Done. Check ' + output_file + ' file.\n')
    sys.exit(0)
