from datetime import datetime

from django.contrib.auth.decorators import login_required, permission_required
from django.core import serializers
from django.http import HttpRequest, HttpResponse, HttpResponseForbidden
from django.utils.decorators import method_decorator
from django.views.generic import ListView

from .models import Vulnerability, RiskQuestions

login_url='catalog:login'
decorators = [login_required(login_url=login_url)]

today = datetime.today().strftime('%Y-%b-%d-%H%M')
output_file = 'VC-export-' + today + '.json'

@method_decorator(decorators, name='dispatch')
@method_decorator(permission_required('catalog.detail_vulnerability', \
    raise_exception=True), name='dispatch')
class JsonExportView(ListView):
    '''/catalog/vulnerability/data/json/export'''
    '''Exports vulnerabilities and risk questions to a JSON file.'''
    
    def export_database(HttpRequest):
        if not HttpRequest.user.is_authenticated:
            return HttpResponseRedirect(reverse(login_url))
        if not HttpRequest.user.has_perm('catalog.detail_vulnerability'):
            return HttpResponseForbidden('<h1>403 Forbidden</h1>')

        all_objects = list(Vulnerability.objects.all()) \
                    + list(RiskQuestions.objects.all())                        
        result = serializers.serialize('json', all_objects)
        response = HttpResponse(result, content_type='application/json')
        response['Content-Disposition'] = 'attachment; filename=' + output_file

        return response
