import json

from django.views.generic import ListView
from django.core import serializers
from django.http import HttpRequest, HttpResponse, HttpResponseRedirect
from django.http import HttpResponseForbidden, HttpResponseNotFound
from django.urls import reverse
from django.contrib.auth.models import User, Group

from datetime import datetime

from .models import Vulnerability, RiskQuestions


login_url='catalog:login'
today = datetime.today().strftime('%Y-%b-%d-%H%M')
output_file = 'VC-backup-' + today + '.json'
 
class JsonBackupView(ListView):
    '''
    Dumps database data including users and groups.
    Call it at:

    /catalog/vulnerability/data/json/backup

    The output is a JSON data with all relevant fields to recover.
    '''

    #########################################################################
    #### Warning: requires user to be a superuser to get backup data.
    #########################################################################
    def dump_database(HttpRequest):
        if not HttpRequest.user.is_authenticated:
            return HttpResponseRedirect(reverse(login_url))
        if not HttpRequest.user.is_superuser:
            return HttpResponseForbidden('<h1>403 Forbidden</h1>')

        users = list(User.objects.all())
        groups = list(Group.objects.all())
        vulnerabilities = list(Vulnerability.objects.all())
        riskQuestions = list(RiskQuestions.objects.all())

        all_objects = users \
                     + groups \
                     + vulnerabilities \
                     + riskQuestions

        result = serializers.serialize('json', all_objects)
        response = HttpResponse(result, content_type='application/json')
        response['Content-Disposition'] = 'attachment; filename=' + output_file

        return response
