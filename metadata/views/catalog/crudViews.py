
from django.views.generic import ListView
from django.views.generic.detail import DetailView
from django.views.generic.edit import CreateView, UpdateView, DeleteView
from catalog.forms import VulnerabilityForm, FastUpdateForm

from django.contrib.auth.decorators import login_required, permission_required
from django.utils.decorators import method_decorator

from .models import Vulnerability, RiskQuestions


decorators = [login_required(login_url='catalog:login')]

#########################################################################
#### Create: requires catalog.add_vulnerability user permission.
#########################################################################

@method_decorator(decorators, name='dispatch')
@method_decorator(permission_required('catalog.add_vulnerability', \
    raise_exception=True), name='dispatch')
class AddVulnerability(CreateView):
    ### Template to add a vulnerability
    form_class = VulnerabilityForm

    template_name = 'catalog/add.html'
    success_url = '/catalog/'

    def get_context_data(self, **kwargs):
        ## Necessary to provide Risk Questions to Risk Calculator.
        context = super().get_context_data(**kwargs)
        context['riskquestions_list'] = RiskQuestions.objects.all()
        return context

#########################################################################
#### Read: requires catalog.read_vulnerability user permission.
#########################################################################

@method_decorator(decorators, name='dispatch')
@method_decorator(permission_required('catalog.read_vulnerability', \
    raise_exception=True), name='dispatch')
class HomeView(ListView):
    ### The homepage template.
    model = Vulnerability
    template_name = 'catalog/home.html'

@method_decorator(decorators, name='dispatch')
@method_decorator(permission_required('catalog.read_vulnerability', \
    raise_exception=True), name='dispatch')
class IndexView(ListView):
    ### An rendered index with all vulnerabilities.
    template_name = 'catalog/index.html'
    context_object_name = 'vulnerability_list'

    def get_queryset(self):
        start = self.request.GET.get('start')
        stop = self.request.GET.get('stop')

        #### Sanitizing start & stop parameters before reach django query:
        step = 10
        if (not start) or (int(start) < 0):
            start = 0
        if (not stop) or (int(stop) < 0):
            stop = int(start) + step

        start = int(start)
        stop = int(stop)
        #### End of Sanitizing.

        return Vulnerability.objects \
                            .order_by('-identification_date')[start:stop] \
                            .all()

@method_decorator(decorators, name='dispatch')
@method_decorator(permission_required('catalog.read_vulnerability', \
    raise_exception=True), name='dispatch')
class DetailedView(DetailView):
    ### A rendered template to show a given vulnerability in detail.
    model = Vulnerability
    template_name = 'catalog/detail.html'


@method_decorator(decorators, name='dispatch')
@method_decorator(permission_required('catalog.read_vulnerability', \
    raise_exception=True), name='dispatch')
class PanoramaView(ListView):
    ### The template for graphical visualization.
    model = Vulnerability
    template_name = 'catalog/panorama.html'


#########################################################################
#### Update: requires catalog.change_vulnerability user permission.
#########################################################################

@method_decorator(decorators, name='dispatch')
@method_decorator(permission_required('catalog.change_vulnerability', \
    raise_exception=True), name='dispatch')
class UpdateVulnerability(UpdateView):
    ### Template to add a vulnerability
    model = Vulnerability
    form_class = VulnerabilityForm
    permission_required('catalog.change_vulnerability')

    template_name = 'catalog/update.html'
    success_url = '/catalog/'

@method_decorator(decorators, name='dispatch')
@method_decorator(permission_required('catalog.change_vulnerability', \
    raise_exception=True), name='dispatch')
class FastUpdateVulnerability(UpdateView):
    ### Template to add a vulnerability
    model = Vulnerability
    form_class = FastUpdateForm
    permission_required('catalog.change_vulnerability')

    template_name = 'catalog/fastupdate.html'
    success_url = '/catalog/'

#########################################################################
#### Delete: requires catalog.delete_vulnerability user permission.
#########################################################################

@method_decorator(decorators, name='dispatch')
@method_decorator(permission_required('catalog.delete_vulnerability', \
    raise_exception=True), name='dispatch')
class DeleteVulnerability(DeleteView):
    ### Template to add a vulnerability
    model = Vulnerability
    permission_required('catalog.delete_vulnerability')
    template_name = 'catalog/delete.html'
    success_url = '/catalog/'
