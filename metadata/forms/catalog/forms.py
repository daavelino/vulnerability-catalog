#from django.forms import Form, ModelForm, Select, DateInput, FloatField, NumberInput, Textarea, CharField, FileField
from django import forms
from django.db import models

from catalog.models import Vulnerability, RiskQuestions

class DateInput(forms.DateInput):
    input_type = 'date'

class VulnerabilityForm(forms.ModelForm):
    #### https://docs.djangoproject.com/en/2.0/_modules/django/forms/forms/
    def as_table(self):
        return self._html_output(
            normal_row='<tr><th>%(label)s</th><td>%(errors)s%(field)s%(help_text)s</td></tr>',
            error_row='<tr><td>%s</td></tr>',
            row_ender='</td></tr>',
            help_text_html='<br><small class="text-muted">%s</small>',
            errors_on_separate_row=False
            )


    class Meta:
        model = Vulnerability
        fields = '__all__'

        help_texts = {
            'risk': '<small><button type="button" class="btn btn-success btn-small" data-toggle="modal" data-target="#riskCalculatorModal">Calculator</button></small> (Required)',
            'cvss_value': '<small><button type="button" class="btn btn-success btn-small" data-toggle="modal" data-target="#cvssCalculatorModal">Calculator</button></small> (Required)'
        }

        cvss_value = forms.FloatField(min_value=0, max_value=10)
        report_page = forms.FloatField(min_value=0)
        risk = forms.CharField(initial='Not evaluated')

        widgets = {
                'perimeter': forms.Select(),
                'synopsis': forms.Textarea(attrs={'cols':'24','rows':5,'wrap':'soft'}),
                'identification_date': DateInput(),
                'remediation_deadline': DateInput(),
                'remediation': forms.Textarea(attrs={'cols':'24','rows':5,'wrap':'soft'}),
                'observation': forms.Textarea(attrs={'cols':'24','rows':5,'wrap':'soft'}),
                'cvss_value': forms.NumberInput(attrs={'min':0, 'max':10}),
                'report_page': forms.NumberInput(attrs={'min':0})
            }
    

class FastUpdateForm(forms.ModelForm):
    class Meta:
        model = Vulnerability
        fields =[
            'status', 
            'risk', 
            'risk_vector', 
            'risk_acceptance_reason',
            'cvss_value', 
            'cvss_vector', 
            'remediation_deadline'
            ]

        widgets = {
                'remediation_deadline': DateInput()
            }

class UploadFileForm(forms.Form):
    title = forms.CharField(max_length=50)
    file = forms.FileField()
